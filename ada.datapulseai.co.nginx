# ADA Platform - Nginx Configuration
# Domain: ada.datapulseai.co
# Advanced Data Analytics Platform

# HTTP server block - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ada.datapulseai.co;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ada.datapulseai.co;

    # SSL configuration (will be managed by Certbot)
    # ssl_certificate /etc/letsencrypt/live/ada.datapulseai.co/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/ada.datapulseai.co/privkey.pem;
    
    # SSL parameters
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval' blob: wss: ws:; font-src 'self' https: data:; img-src 'self' https: data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logs
    access_log /var/log/nginx/ada.datapulseai-access.log;
    error_log /var/log/nginx/ada.datapulseai-error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon application/wasm;

    # Root directory
    root /srv/http/ada;
    index index.html;

    # Client body size for file uploads
    client_max_body_size 100M;

    # Static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    location ~* \.(css|js|woff|woff2|ttf|eot|otf)$ {
        expires 365d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Specific paths for component assets
    location /src/ {
        try_files $uri $uri/ =404;
        expires 7d;
        add_header Cache-Control "public";
    }

    # API proxy (if you have a backend API running)
    location /api/ {
        # If you have a backend API, uncomment and configure:
        # proxy_pass http://localhost:8000;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_read_timeout 1m;
        # proxy_connect_timeout 1m;
        
        # For now, return 502 if no backend is configured
        return 502;
    }

    # WebSocket support (if needed)
    location /ws/ {
        # proxy_pass http://localhost:8080;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_read_timeout 86400;
        
        # For now, return 502 if no WebSocket server is configured
        return 502;
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"ada-platform"}';
    }

    # SPA routing - this must be last
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}