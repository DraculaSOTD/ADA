# ADA Platform - Nginx Configuration
# Domain: ada.datapulseai.co
# Simplified configuration for initial SSL setup

server {
    listen 80;
    listen [::]:80;
    server_name ada.datapulseai.co;

    # Root directory
    root /srv/http/ada;
    index index.html;

    # Logs
    access_log /var/log/nginx/ada.datapulseai-access.log;
    error_log /var/log/nginx/ada.datapulseai-error.log;

    # Client body size for file uploads  
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon application/wasm;

    # Static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    location ~* \.(css|js|woff|woff2|ttf|eot|otf)$ {
        expires 365d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Specific paths for component assets
    location /src/ {
        try_files $uri $uri/ =404;
        expires 7d;
        add_header Cache-Control "public";
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"ada-platform"}';
    }

    # SPA routing - this must be last
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}